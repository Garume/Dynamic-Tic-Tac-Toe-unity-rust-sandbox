// <auto-generated>
// This code is generated by csbindgen.
// DON'T CHANGE THIS DIRECTLY.
// </auto-generated>
#pragma warning disable CS8500
#pragma warning disable CS8981
using System;
using System.Runtime.InteropServices;


namespace CsBindgen
{
    public static unsafe partial class NativeMethods
    {
        const string __DllName = "dynamic_tic_tac_toe";



        [DllImport(__DllName, EntryPoint = "create_game", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern FfiGame create_game(int size, CellType first_cell_type);

        [DllImport(__DllName, EntryPoint = "next", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern GameStatus next(FfiGame game, Vec2 pos);

        [UnmanagedFunctionPointer(CallingConvention.Cdecl)]
        public delegate void bind_listener_delegate(FfiCell arg1);

        [DllImport(__DllName, EntryPoint = "bind", CallingConvention = CallingConvention.Cdecl, ExactSpelling = true)]
        public static extern void bind(FfiGame game, bind_listener_delegate listener);


    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct FfiGame
    {
        public Game* game;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct FfiCell
    {
        public CellType cell_type;
        public Vec2 position;
        public int history_count;
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct Game
    {
    }

    [StructLayout(LayoutKind.Sequential)]
    public unsafe partial struct Vec2
    {
        public int x;
        public int y;
    }


    public enum GameStatus : byte
    {
        Continue,
        WinO,
        WinX,
        Draw,
    }

    public enum CellType : byte
    {
        Empty,
        X,
        O,
    }


}
